<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:ViewPane"
	xmlns:toolbar="clr-namespace:ViewPane.Toolbar"
	xmlns:thumbanils="clr-namespace:ViewPane.Thumbnails"
 	xmlns:itResults="clr-namespace:ViewPane.ItResults"
   >

	<Style x:Key="styleButtonAction" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Blue"/>
		<Setter Property="FontFamily" Value="Times New Roman" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="buttonGrid" RenderTransformOrigin=".5,.5">
						<Rectangle RadiusX="5" RadiusY="5" Stroke="Black" StrokeThickness="1"/>
						<Rectangle Fill="{TemplateBinding Background}" Margin="1" RadiusX="5" RadiusY="5" Stroke="White" StrokeThickness="1"/>
						<Rectangle x:Name="outerRect" Margin="1" RadiusX="5" RadiusY="5">
							<Rectangle.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#B4FFFFFF" Offset="0"/>
									<GradientStop Color="#5AFFFFFF" Offset="0.5"/>
									<GradientStop Color="#00FFFFFF" Offset="0.52"/>
									<GradientStop Color="#ABFFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Viewbox>
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="buttonGrid"  Property="Margin" Value="3"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleButtonPin" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Blue"/>
		<Setter Property="FontFamily" Value="Times New Roman" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="buttonGrid" RenderTransformOrigin=".5,.5">
						<Rectangle x:Name="outerRect" StrokeThickness="1"/>
						<Viewbox>
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="outerRect"  Property="Stroke" Value="Black"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="buttonGrid"  Property="Margin" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Blue"/>
		<Setter Property="FontFamily" Value="Times New Roman" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="buttonGrid" RenderTransformOrigin=".5,.5">
						<Rectangle RadiusX="5" RadiusY="5" Stroke="Black" StrokeThickness="1"/>
						<Rectangle x:Name="innerStroke" Fill="{TemplateBinding Background}" Margin="1" RadiusX="5" RadiusY="5" Stroke="White" StrokeThickness="1"/>
						<Rectangle x:Name="outerRect" Margin="1" RadiusX="5" RadiusY="5">
							<Rectangle.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#B4FFFFFF" Offset="0"/>
									<GradientStop Color="#5AFFFFFF" Offset="0.5"/>
									<GradientStop Color="#00FFFFFF" Offset="0.52"/>
									<GradientStop Color="#ABFFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
							<ContentPresenter  Margin="{TemplateBinding Padding}" />
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<!--<Setter TargetName="outerRect"  Property="Fill" Value="Blue"/>-->
							<Setter TargetName="outerRect"  Property="Fill">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientStop Color="#00FFFFFF" Offset="0"/>
										<GradientStop Color="#AAFFFFFF" Offset="0.4"/>
										<GradientStop Color="#AAFFFFFF" Offset="0.6"/>
										<GradientStop Color="#00FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="5"/>
							<Setter Property="Foreground" Value="Black"/>
							<Setter TargetName="innerStroke"  Property="Stroke" Value="Red"/>
							<Setter TargetName="innerStroke"  Property="StrokeThickness" Value="2"/>
							<Setter TargetName="innerStroke"  Property="RadiusX" Value="3"/>
							<Setter TargetName="innerStroke"  Property="RadiusY" Value="3"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Blue"/>
		<Setter Property="FontFamily" Value="Times New Roman" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid x:Name="buttonGrid" RenderTransformOrigin=".5,.5">
						<Rectangle RadiusX="5" RadiusY="5" Stroke="Black" StrokeThickness="1"/>
						<Rectangle x:Name="innerStroke" Fill="{TemplateBinding Background}" Margin="1" RadiusX="5" RadiusY="5" Stroke="White" StrokeThickness="1"/>
						<Rectangle x:Name="outerRect" Margin="2" RadiusX="5" RadiusY="5">
							<Rectangle.Fill>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#B4FFFFFF" Offset="0"/>
									<GradientStop Color="#5AFFFFFF" Offset="0.5"/>
									<GradientStop Color="#00FFFFFF" Offset="0.52"/>
									<GradientStop Color="#ABFFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Viewbox>
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsChecked" Value="True"/>
								<!--<Condition  Property="IsEnabled" Value="True"/>-->
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect"  Property="Fill">
								<Setter.Value>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientStop Color="#00FFFFFF" Offset="0"/>
										<GradientStop Color="#AAFFFFFF" Offset="0.4"/>
										<GradientStop Color="#AAFFFFFF" Offset="0.6"/>
										<GradientStop Color="#00FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Padding" Value="5"/>
							<Setter Property="Foreground" Value="Black"/>
							<Setter TargetName="buttonGrid"  Property="Margin" Value="2"/>
							<Setter TargetName="innerStroke"  Property="Stroke" Value="Red"/>
							<Setter TargetName="innerStroke"  Property="StrokeThickness" Value="2"/>
							<Setter TargetName="innerStroke"  Property="RadiusX" Value="3"/>
							<Setter TargetName="innerStroke"  Property="RadiusY" Value="3"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="styleGroupBox" TargetType="{x:Type GroupBox}">
		<Setter Property="FontFamily" Value="Times New Roman"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="BorderBrush" Value="#FFD0D0BF" />
		<Setter Property="Margin" Value="2" />
	</Style>

	<Style TargetType="{x:Type itResults:Thumbnail}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type itResults:Thumbnail}">
					<Grid x:Name="mainGrid" Margin="1">
						<Rectangle x:Name="outerRect" Stroke="Black" RadiusX="5" RadiusY="5" Fill="{TemplateBinding BackgroundBrush}" />
						<Rectangle x:Name="innerRect" Stroke="Black" StrokeThickness="1" Margin="3" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}"/>
						<Grid Margin="4" >
							<Image Source="{TemplateBinding Image}" x:Name="imagePanel" />
							<Path Data="{TemplateBinding ItGeometry}" x:Name="itPath" Fill="#80000000" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Grid>
						<TextBlock x:Name="header" Text="{TemplateBinding Header}" FontFamily="Arial" FontSize="10" Foreground="Black" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="6" FontWeight="Bold">
							<TextBlock.BitmapEffect>
								<OuterGlowBitmapEffect GlowColor="White" GlowSize="8" Opacity="0.9"  />
							</TextBlock.BitmapEffect>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsChecked" Value="True"/>
								<Condition  Property="IsEnabled" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect" Property="Fill" Value="Red"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type toolbar:ToolbarButton}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolbar:ToolbarButton}">
                    <Grid x:Name="mainGrid">
						<Rectangle x:Name="outerRect1" Fill="#D4D0C8" />
						<Rectangle x:Name="outerRect2" Fill="#D4D0C8" Margin="1,1,0,0" />
						<Rectangle x:Name="innerRect" Margin="1" Fill="#D4D0C8"/>
						<Image Source="{TemplateBinding Image}" x:Name="imagePanel" Margin="1" />
					</Grid>
                    <ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsPressed" Value="True"/>
								<Condition  Property="IsEnabled" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect1"  Property="Fill" Value="#808080"/>
							<Setter TargetName="outerRect2" Property="Fill" Value="White"/>
							<Setter TargetName="innerRect" Property="Fill" Value="#EAE8E4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsPressed" Value="False"/>
								<Condition  Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect1"  Property="Fill" Value="White"/>
							<Setter TargetName="outerRect2" Property="Fill" Value="#808080"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type toolbar:ToolbarRadioButton}">
		<Setter Property="Width" Value="32"/>
		<Setter Property="Height" Value="27"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type toolbar:ToolbarRadioButton}">
					<Grid x:Name="mainGrid" >
						<Rectangle x:Name="outerRect1" Fill="#D4D0C8" />
						<Rectangle x:Name="outerRect2" Fill="#D4D0C8" Margin="1,1,0,0" />
						<Rectangle x:Name="innerRect" Margin="1" Fill="#D4D0C8"/>
						<Image Source="{TemplateBinding Image}" x:Name="imagePanel" Margin="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsChecked" Value="True"/>
                                <Condition  Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="outerRect1"  Property="Fill" Value="#808080"/>
                            <Setter TargetName="outerRect2" Property="Fill" Value="White"/>
							<Setter TargetName="innerRect" Property="Fill" Value="#EAE8E4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsChecked" Value="False"/>
								<Condition  Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect1"  Property="Fill" Value="White"/>
							<Setter TargetName="outerRect2" Property="Fill" Value="#808080"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type toolbar:ToolbarCheckBox}">
		<Setter Property="Width" Value="32"/>
		<Setter Property="Height" Value="27"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type toolbar:ToolbarCheckBox}">
					<Grid x:Name="mainGrid" >
						<Rectangle x:Name="outerRect1" Fill="#D4D0C8" />
						<Rectangle x:Name="outerRect2" Fill="#D4D0C8" Margin="1,1,0,0" />
						<Rectangle x:Name="innerRect" Margin="1" Fill="#D4D0C8"/>
						<Image Source="{TemplateBinding Image}" x:Name="imagePanel" Margin="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsChecked" Value="True"/>
								<Condition  Property="IsEnabled" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect1"  Property="Fill" Value="#808080"/>
							<Setter TargetName="outerRect2" Property="Fill" Value="White"/>
							<Setter TargetName="innerRect" Property="Fill" Value="#EAE8E4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition  Property="IsChecked" Value="False"/>
								<Condition  Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="outerRect1"  Property="Fill" Value="White"/>
							<Setter TargetName="outerRect2" Property="Fill" Value="#808080"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Gray"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type toolbar:ToolbarComboBox}">
		<Setter Property="Width" Value="200"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolbar:ToolbarComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

	<Style x:Key="uiPointStyle" TargetType="{x:Type Button}" >
		<Setter Property="Background" Value="#FF000080"/>
		<Setter Property="Width" Value="7"/>
		<Setter Property="Height" Value="7"/>
		<Setter Property="Margin" Value="-3"/>
		<Setter Property="Cursor" Value="SizeAll"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle Fill="#FFC8C8C8" />
						<Rectangle Fill="{TemplateBinding Background}" Margin="1"/>
						<Rectangle Fill="#FFFFFFFF" Margin="2"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <Style TargetType="{x:Type toolbar:ToolbarPostProcessingRadio}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="Height" Value="27" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolbar:ToolbarPostProcessingRadio}">
                    <Grid >
                        <Image Source="{TemplateBinding ControlImage}" SnapsToDevicePixels="True" Width="30" Height="27" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type toolbar:ToolbarPostProcessingCheck}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Height" Value="30" />
		<Setter Property="Height" Value="27" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="{x:Type toolbar:ToolbarPostProcessingCheck}">
					<Grid >
						<Image Source="{TemplateBinding ControlImage}" SnapsToDevicePixels="True" Width="30" Height="27" />
					</Grid>
				</ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
